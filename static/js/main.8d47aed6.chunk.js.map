{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","state","squares","Array","fill","xIsNext","i","this","handleClick","slice","calculateWinner","setState","status","winner","renderSquare","React","Component","Game","lines","length","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"0NAmBE,SAASA,EAAOC,GACd,OACE,wBAAQC,UAAU,SAASC,QAASF,EAAME,QAA1C,SACGF,EAAMG,Q,IAMPC,E,kDACJ,WAAYJ,GAAO,IAAD,8BAChB,cAAMA,IACDK,MAAM,CACTC,QAAUC,MAAM,GAAGC,KAAK,MACxBC,SAAU,GAJI,E,gDAOlB,SAAaC,GAAI,IAAD,OACd,OACA,cAACX,EAAD,CACEI,MAAOQ,KAAKN,MAAMC,QAAQI,GAC1BR,QAAS,kBAAI,EAAKU,YAAYF,Q,yBAGlC,SAAYA,GACV,IAAMJ,EAAUK,KAAKN,MAAMC,QAAQO,QAChCC,EAAgBR,IAAUA,EAAQI,KAGrCJ,EAAQI,GAAKC,KAAKN,MAAMI,QAAQ,IAAI,IACpCE,KAAKI,SAAS,CACZT,QAAQA,EACRG,SAASE,KAAKN,MAAMI,a,oBAIxB,WACE,IACIO,EADEC,EAAQH,EAAgBH,KAAKN,MAAMC,SAQzC,OALEU,EADCC,EACQ,SAAWA,EAEX,gBAAkBN,KAAKN,MAAMI,QAAQ,IAAI,KAIlD,gCACE,qBAAKR,UAAU,SAAf,SAAyBe,IACzB,sBAAKf,UAAU,YAAf,UACGU,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,MAErB,sBAAKjB,UAAU,YAAf,UACGU,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,MAErB,sBAAKjB,UAAU,YAAf,UACGU,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,a,GApDTC,IAAMC,WA2DpBC,E,4JACJ,WACE,OACE,sBAAKpB,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACG,EAAD,MAEF,sBAAKH,UAAU,YAAf,UACE,wBACA,iC,GATSkB,IAAMC,WAuBzB,SAASN,EAAgBR,GAWvB,IAVA,IAAMgB,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAZ,EAAI,EAAGA,EAAIY,EAAMC,OAAQb,IAAK,CACrC,kBAAkBY,EAAMZ,GAAxB,GAAOc,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAIpB,EAAQkB,IAAMlB,EAAQkB,KAAOlB,EAAQmB,IAAMnB,EAAQkB,KAAOlB,EAAQoB,GACpE,OAAOpB,EAAQkB,GAGnB,OAAO,KAtBTG,IAASC,OACP,cAACP,EAAD,IACAQ,SAASC,eAAe,W","file":"static/js/main.8d47aed6.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n// class Square extends React.Component {\r\n//     constructor(props){\r\n//       super(props);\r\n//       this.state={\r\n//         value:null\r\n//       };\r\n//     }\r\n//     render() {\r\n//       return (\r\n//         <button className=\"square\" onClick={()=>this.props.onClick()}>\r\n//           {this.props.value}\r\n//         </button>\r\n//       );\r\n//     }\r\n//   }\r\n  function Square(props){\r\n    return(\r\n      <button className=\"square\" onClick={props.onClick}>\r\n        {props.value}\r\n      </button>\r\n    );\r\n  }  \r\n\r\n\r\n  class Board extends React.Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state={\r\n        squares : Array(9).fill(null),\r\n        xIsNext : true,\r\n      };\r\n    }\r\n    renderSquare(i) {\r\n      return (\r\n      <Square \r\n        value={this.state.squares[i]}\r\n        onClick={()=>this.handleClick(i)}/>\r\n      );\r\n    }\r\n    handleClick(i){\r\n      const squares = this.state.squares.slice();\r\n      if(calculateWinner(squares)||squares[i]){\r\n        return;\r\n      }\r\n      squares[i] = this.state.xIsNext?'X':'O';\r\n      this.setState({\r\n        squares:squares,\r\n        xIsNext:!this.state.xIsNext\r\n      });\r\n    }\r\n  \r\n    render() {\r\n      const winner =calculateWinner(this.state.squares);\r\n      let status;\r\n      if(winner){\r\n        status = 'winner' + winner;\r\n      }else{\r\n        status = 'Next player:' + (this.state.xIsNext?'X':'O');\r\n      }\r\n  \r\n      return (\r\n        <div>\r\n          <div className=\"status\">{status}</div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(0)}\r\n            {this.renderSquare(1)}\r\n            {this.renderSquare(2)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(3)}\r\n            {this.renderSquare(4)}\r\n            {this.renderSquare(5)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(6)}\r\n            {this.renderSquare(7)}\r\n            {this.renderSquare(8)}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  class Game extends React.Component {\r\n    render() {\r\n      return (\r\n        <div className=\"game\">\r\n          <div className=\"game-board\">\r\n            <Board />\r\n          </div>\r\n          <div className=\"game-info\">\r\n            <div>{/* status */}</div>\r\n            <ol>{/* TODO */}</ol>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  // ========================================\r\n  \r\n  ReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n  );\r\n  \r\n  function calculateWinner(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n  }"],"sourceRoot":""}